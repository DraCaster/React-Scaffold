{"version":3,"sources":["modules/components/menuToolbar/StyleMenuToolbar.js","modules/layout/Home.js","modules/layout/About.js","modules/layout/routes.js","modules/components/sliderbar/Sliderbar.js","modules/components/menuToolbar/MenuToolbar.js","modules/components/footer/footerStyle.js","modules/components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["styles","makeStyles","theme","container","height","backgroundColor","flexGrow","menuButton","marginRight","spacing","title","paddingLeft","root","display","hide","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","Typography","color","link","textDecoration","useStyles","typography","iconHome","fontSize","blue","marginTop","box","padding","margin","Home","props","classes","Grid","direction","justify","alignItems","item","xs","sm","className","variant","About","routesPublic","name","path","component","menuList","icon","list","fullList","menuIcon","paddingTop","paddingBottom","fontWeight","Sliderbar","side","React","useState","left","state","setState","toggleDrawer","open","event","type","key","Button","onClick","mr","Drawer","onClose","role","onKeyDown","List","ListItem","ListItemText","Divider","map","elem","index","to","button","ListItemIcon","MenuToolbar","AppBar","position","Toolbar","flexDirection","minHeight","main","marginBottom","footer","bottom","Copyright","Link","href","target","Date","getFullYear","Footer","Container","maxWidth","App","routeComponentsPublic","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b9a9ea79.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const styles = makeStyles(theme => ({\n    container:{\n      height: \"100vh\",\n        backgroundColor: \"#c9c1ab\",\n        flexGrow: 1,\n    },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      title: {\n        flexGrow: 1,\n        paddingLeft:5\n      },\n      root: {\n        display: 'flex',\n      },\n      hide:{\n        display:'none',\n      },\n      appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      Typography:{\n        color: '#ffffff',\n      },\n      link:{\n        textDecoration: 'none',\n      },\n  }));\n\n  ","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        color: 'black',\n    },\n    iconHome: {\n        fontSize: 50,\n        color: blue[500],\n        marginTop: theme.spacing(3),\n    },\n    box: {\n        padding: 0,\n        height: \"80vh\",\n        margin: 'auto',\n    },\n}));\n\nconst Home = (props) => {\n    const classes = useStyles();\n    return (\n        <Grid container\n            direction=\"column\"\n            justify=\"space-evenly\"\n            alignItems=\"center\">\n            <Grid item xs={12} sm={6}><HomeIcon className={classes.iconHome} /></Grid>\n            <Grid item xs={12} sm={6}><Typography className={classes.typography} variant='h4'>\n                Welcome !\n            </Typography>\n            </Grid>\n        </Grid>\n\n\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        color: 'black',\n    },\n    iconHome: {\n        fontSize: 50,\n        color: blue[500],\n        marginTop: theme.spacing(3),\n    },\n    box: {\n        padding: 0,\n        height: \"80vh\",\n        margin: 'auto',\n    },\n}));\n\nconst About = (props) => {\n    const classes = useStyles();\n    return (\n        <Grid container\n            direction=\"column\"\n            justify=\"space-evenly\"\n            alignItems=\"center\">\n            <Grid item xs={12} sm={6}>\n                <br />\n                <Typography variant={'h2'}>React Scaffold</Typography>\n                <br />\n                <Typography className={classes.typography}>\n                    ES - Una sencilla aplicaci√≥n para usar como base de tus proyectos.\n                </Typography>\n                <Typography>\n                    EN - A simple application to use as the basis of your projects.\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default About;","import React from 'react'\nimport Home from './Home'\nimport About from './About'\n\nimport HomeIcon from '@material-ui/icons/HomeTwoTone';\nimport AboutIcon from '@material-ui/icons/InfoTwoTone';\n\nexport const routesPublic = [\n    {\n        name: \"Home\",\n        path: '/home',\n        component: Home,\n        menuList: true,\n        icon: <HomeIcon />\n    },\n    {\n        name: \"About\",\n        path: '/about',\n        component: About,\n        menuList: true,\n        icon: <AboutIcon />,\n    }];","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography, Drawer, Button, List, Divider, ListItem, ListItemText,\n  ListItemIcon\n} from '@material-ui/core'\n\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport {routesPublic} from '../../layout/routes'\nimport { Link } from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250,\n    height: 1000\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: 'black',\n  },\n  menuIcon: {\n    color: \"white\",\n  },\n  title: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    color: 'black',\n    fontWeight: 'bold',\n\n  }\n}));\n\nexport default function Sliderbar() {\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem>\n          <ListItemText className={classes.title}>\n            <Typography className={classes.title}>\n              React Scaffold\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <Divider />\n        {routesPublic.map((elem, index) => (\n          <Link to={elem.path} className={classes.link} key={index}>\n            <ListItem button>\n              <ListItemIcon>{elem.icon}</ListItemIcon>\n              <ListItemText>\n                {elem.name}\n              </ListItemText>\n            </ListItem></Link>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(\"left\", true)}>\n        <MenuIcon mr={4} className={classes.menuIcon} />\n      </Button>\n      <Drawer open={state.left} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n}\n","import React from 'react'\nimport {\n    Grid,\n    AppBar,\n    Toolbar,\n    Typography,\n} from '@material-ui/core'\nimport { styles } from './StyleMenuToolbar'\nimport Sliderbar from '../sliderbar/Sliderbar'\n\nfunction MenuToolbar() {\n    const classes = styles\n    return (\n        <Grid container className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Sliderbar />\n                    <Typography\n                        className={classes.title}\n                        variant='h5'\n                    >\n                        Your title\n                    </Typography>\n                   \n                </Toolbar>\n            </AppBar>\n        </Grid>\n    );\n}\n\n\nexport default MenuToolbar;\n","import {makeStyles} from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        paddingTop: 4,\n        position: 'absolute',\n        bottom:0,\n        width: '100%',\n        marginTop: 3,\n        backgroundColor: '#5c6bc0',\n    },\n}));","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport { useStyles } from './footerStyle'\n\nconst Copyright = () => {\n\n    return (\n        <Typography variant=\"body2\">\n            {'Copyright ¬© '}\n            <Link color=\"inherit\" href=\"https://github.com/dracaster\" target=\"_blank\">\n                Developed by Lushan\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nexport default function Footer() {\n\n    const classes = useStyles();\n    return (\n        <footer\n            className={classes.footer}>\n            <Container maxWidth=\"sm\">\n                <Typography\n\n                    variant=\"body1\"\n                >\n                    React Scaffold base\n                </Typography>\n                <Copyright />\n            </Container>\n        </footer>\n    );\n}\n","//Developed by Lushan - lujanrojas.informatica@gmail.com\n//https://github.com/dracaster\n\nimport React from 'react';\nimport 'typeface-roboto';\n\n//components\nimport MenuToolbar from './modules/components/menuToolbar/MenuToolbar'\nimport Footer from './modules/components/footer/Footer'\n\n//Router\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//Routes\nimport { routesPublic } from './modules/layout/routes'\n\nfunction App() {\n\n  const routeComponentsPublic = routesPublic\n    .map(({ path, component }, key) =>\n      <Route\n        exact path={path}\n        component={component}\n        key={key} />);\n\n  return (\n    <Router>\n      <MenuToolbar />\n      <Switch>\n        {routeComponentsPublic}\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}